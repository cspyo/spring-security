server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_URL_DEV}:${DB_PORT_DEV}/security?serverTimezone=Asia/Seoul
    username: ${DB_USERNAME_DEV}
    password: ${DB_PASSWORD_DEV}


  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${CLIENT_ID_GOOGLE_DEV}
            client-secret: ${CLIENT_SECRET_GOOGLE_DEV}
            scope:
              - email
              - profile

          facebook:
            client-id: ${CLIENT_ID_FACEBOOK_DEV}
            client-secret: ${CLIENT_SECRET_FACEBOOK_DEV}
            scope:
              - email
              - public_profile

          naver:
            client-id: ${CLIENT_ID_NAVER_DEV}
            client-secret: ${CLIENT_SECRET_NAVER_DEV}
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # Json 데이터의 response 라는 키값으로 회원정보가 들어온다
